%
%             Demonstration input file for simple general purpose FEA code EN234FEA
%                                    A.F. Bower, August 2015
%
%             This example illustrates a simple 3D elastostatic boundary value problem with 8 noded brick elements
%             The element subroutines are in el_linelast_3Dbasic.f90.
%
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% MESH DEFINITION %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
    MESH

%    The NODE command defines properties of the nodes.  
%    The parameters are # of coords, # of DOF, and an optional integer identifier
       NODES
%    The parameters are # of coords, # of DOF, and an optional integer identifier
       PARAMETERS, 3, 3, 1
%      Specify which nodal DOF are displacements.  In the example, DOF 1 is the x displacement, 2 is the y displacement, 3 is the z displacement
       DISPLACEMENT DOF, 1, 2, 3
%    Enter x,y,z coords of nodes.   The node number is optional, and is ignored in the code.
         COORDINATES
         1,  0.d0, 0.d0, 0.d0
         2,  1.d0, 0.d0, 0.d0
         3,  1.d0, 1.d0, 0.d0
         4,  0.d0, 1.d0, 0.d0
         5,  0.d0, 0.d0, 1.d0
         6,  1.d0, 0.d0, 1.d0
         7,  1.d0, 1.d0, 1.d0
         8,  0.d0, 1.d0, 1.d0
         9,  2.d0, 0.d0, 0.d0
        10,  2.d0, 1.d0, 0.d0
        11,   2.d0, 0.d0, 1.d0
        12,   2.d0, 1.d0, 1.d0
        END COORDINATES
      END NODES
%
%     The ELEMENT command defines properties of elements
%     The parameters are no. nodes on the element, total no. state variables, integer identifier

      ELEMENTS
        PARAMETERS, 8, 0, 1001
%       Define element properties - the values are passed to user subroutine elstif in the order they are listed here
%       For the example provided, the params are Youngs Modulus, Poissons ratio
        PROPERTIES
         100.d0, 0.499999999999d0
        END PROPERTIES
%     Define mass density (for explicity dynamics only)
%       DENSITY, 10.d0
%     Define element connectivity
%     The element number (first number in the list) is optional, and is ignored in the code
        CONNECTIVITY, zone1
    1,     1, 2, 3, 4, 5, 6, 7, 8
    2,     2, 9, 10, 3, 6, 11, 12, 7
        END CONNECTIVITY

%     The PROPERTIES, PARAMETERS, CONNECTIVITY keywords can be repeated here to define more set of elements with different properties

        END ELEMENTS
        END MESH

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% BOUNDARY CONDITIONS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%     The BOUNDARY conditions key starts definition of BCs
      BOUNDARY CONDITIONS

%       The HISTORY key defines a time history that can be applied to DOFs or distributed loads
        HISTORY, dof_history
          0.d0, 0.d0                  % Each line gives a time value and then a function value
         10.d0, 1.d0
        END HISTORY

        HISTORY, dload_history
          0.d0, 2.d0
         10.d0, 2.d0
        END HISTORY

%       The NODESET key defines a list of nodes

        NODESET, left
           1, 4, 5, 8
        END NODESET
        NODESET, right
           9, 10, 12, 11
        END NODESET
        NODESET, side
           1, 2, 5, 6, 11, 9
        END NODESET

%      The ELEMENTSET key defines a list of elements
       ELEMENTSET, end_element
           2
       END ELEMENTSET

%       The DEGREE OF FREEDOM key assigns values to nodal DOFs
%       The syntax is node set name, DOF number, VALUE/HISTORY/SUBROUTINE, value/history name/subroutine parameter list name.
%     
        DEGREES OF FREEDOM
           1, 3, VALUE, 0.d0
           side, 2, VALUE, 0.d0
           left, 1, VALUE, 0.d0
           right, 1, HISTORY, dof_history
        END DEGREES OF FREEDOM


%      The DISTRIBUTED LOAD key sets up prescribed (nominal) tractions on element faces
%       The syntax is one of the following options:
%           element set, face #, VALUE, tx,(ty),(tz)        (applies constant pressure/flux to element face in direction DOF)
%           element set, face #, HISTORY,history name, nx,(ny),(nz) (time dependent traction or flux to element face in direction (nx,ny,nz))
%           element set, face #, NORMAL, history name     (applies time dependent pressure normal to element face)
%           element set, face #, SUBROUTINE, subroutine parameter name

 %       DISTRIBUTED LOADS
 %         end_element, 4, Value, 10.d0,0.d0,0.d0
 %       END DISTRIBUTED LOADS

%       The CONSTRAINTS key gives a way to enforce constraints between pairs or groups of nodes.
%       Useful, e.g. for periodic boundary conditions.
%
%      CONSTRAINT PARAMETERS, constraint_params
%          1.d-08
%     END CONSTRAINT PARAMETERS
%
%       The syntax is
%       CONSTRAINTS
%          CONSTRAIN NODE PAIRS, # of nodes pairs, node number or nodeset1, DOF1, node number or nodeset2, DOF2
%          TIE NODES, # of nodes in nodeset to be tied, nodeset1, DOF1, reference node number, DOF2
%          CONSTRAIN NODE SET, # of nodes in constraint, nodeset, dof list (use a node set to define the list), parameter list
%           CONSTRAIN NODE PAIRS, 5, tie_test_1, 1, tie_test_2,1, constraint_params
%           CONSTRAIN NODE SET, 5, tie_test_1, tie_test_2, constraint_params
%           TIE NODES, 4, right, 1, 13, 1
%        END CONSTRAINTS


   END BOUNDARY CONDITIONS

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Mesh printing, error checking %%%%%%%%%%%%%%%%%%%%

%  Print the initial mesh to a file named initial_mesh.dat

   PRINT INITIAL MESH, initial_mesh.dat

%   TIME, VALUE, 0.d0        % Use this to specify the initial time
%   TIME, INCREMENT, 0.01d0  % Use this to specify a time increment (often needed for check stiffness)

%   The CHECK STIFFNESS key tests the element subroutine to ensure that
%   the residual force vector is consistent with the stiffness
       CHECK STIFFNESS, 1001




%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% Analysis %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

   %   The STATIC STEP key initializes a static load step

     STATIC STEP


          INITIAL TIME STEP, 1.d0        % Test of a comment here
          MAX TIME STEP, 1.d0
          MIN TIME STEP, 0.001d0
          MAX NUMBER OF STEPS, 1
          STOP TIME, 10.d0
          STATE PRINT STEP INTERVAL, 1
          USER PRINT STEP INTERVAL, 1


%        The SOLVER key controls the equation solver and Newton-Raphson iterations
%        The options are FACTOR for direct solver, CONJUGATE GRADIENT for cg solver
%        Factor will work on anything but might be slow for large equation systems.   
%        Conjugate gradient works well for elasticity problems but (with the diagonal preconditioner used here) is not so good for unsymmetric matrices
%                        LINEAR for linear equations, NONLINEAR for nonlinear equations
%                        For nonlinear solver, must specify convergence tolerance and max # iterations
%                        UNSYMMETRIC  (optional - only for unsymmetric stiffness)

         SOLVER, DIRECT, LINEAR


%      This prints the DOF values and projected nodal state for all solid elements to a tecplot readable file
%      Nodal variables are printed as
%         X, Y, (Z), Ux, Uy, (Uz), Projected states.
%         The projected states are controlled by the user - see subroutine elstat in file usrelem.f90
%         Also (for this example file) subroutine state_linelast_3dbasic in file el_linelast_3Dbasic.f90
%         In this example the states are the stresses sxx,syy,szz,sxy,sxz,syz
         PRINT STATE, Output_files/contourplots3dlinear1.dat
            DEGREES OF FREEDOM
            FIELD VARIABLES, S11,S22,S33,S12,S13,S23
            DISPLACED MESH
            DISPLACEMENT SCALE FACTOR, 1.d0
         END PRINT STATE

%        The lines below are just examples - no code exists to use them.
%          USER PRINT FILES
%          List file names to contain the output. Fortran unit numbers are provided to each file in the user subroutine
%             filename1.dat
%             filename2.dat
%         END USER PRINT FILES
%          USER PRINT PARAMETERS
%            list of parameters to be passed to the subroutine
%             1.d0, 6.d0
%             4
%         END USER print PARAMETERS

        END STATIC STEP
         

   STOP
